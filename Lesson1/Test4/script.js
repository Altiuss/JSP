"use strict";


//1) –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤—ã—á–∏—Å–ª—è—Ç—å –æ–±—ä–µ–º –∏ –ø–ª–æ—â–∞–¥—å –ø–æ–ª–Ω–æ–π –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏ –∫—É–±–∞ (—Ç–æ–∂–µ –±–∞–∑–æ–≤–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞, –∏–Ω–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ —Å–æ–∑–¥–∞–Ω–∏–∏ –∞–Ω–∏–º–∞—Ü–∏–π).
//  –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤ —Å–µ–±—è —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º –¥–ª–∏–Ω—ã —Ä–µ–±—Ä–∞ –∫—É–±–∞. –û—Ç–≤–µ—Ç –≤—ã–≤–µ–¥–∏—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ —Å—Ç—Ä–æ–∫–∏, –∫–æ—Ç–æ—Ä—ã–π –∏–∑–æ–±—Ä–∞–∂–µ–Ω –≤ –ø—Ä–∏–º–µ—Ä–∞—Ö.

//–ï—Å–ª–∏ –≤ —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–ø–∞–ª –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç –∏–ª–∏ –≤—ã—á–∏—Å–ª–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ - –≤–µ—Ä–Ω—É—Ç—å —Å—Ç—Ä–æ–∫—É "–ü—Ä–∏ –≤—ã—á–∏—Å–ª–µ–Ω–∏–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞"

//–ù–ï –ò–°–ü–û–õ–¨–ó–£–ô–¢–ï –û–ü–ï–†–ê–¢–û–† –°–¢–ï–ü–ï–ù–ò ** - –≤ –æ–Ω–ª–∞–π–Ω —Å—Ä–µ–¥–µ –±—Ä–∞—É–∑–µ—Ä–∞ –æ–Ω –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏ —Ç–µ—Å—Ç—ã –±—É–¥—É—Ç –ª–æ–º–∞—Ç—å—Å—è. –≠—Ç–æ –∏–∑-–∑–∞ —Ç–æ–≥–æ, —á—Ç–æ —ç—Ç–æ—Ç –æ–ø–µ—Ä–∞—Ç–æ—Ä –∏–∑ –±–æ–ª–µ–µ –Ω–æ–≤–æ–≥–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞, —á–µ–º —Ç—É—Ç –¥–æ—Å—Ç—É–ø–µ–Ω.

//—Ä–∏–º–µ—Ä—ã:

//calculateVolumeAndArea(5)  => '–û–±—ä–µ–º –∫—É–±–∞: 125, –ø–ª–æ—â–∞–¥—å –≤—Å–µ–π –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏: 150'

//calculateVolumeAndArea(15)  => '–û–±—ä–µ–º –∫—É–±–∞: 3375, –ø–ª–æ—â–∞–¥—å –≤—Å–µ–π –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏: 1350'

//alculateVolumeAndArea(15.5)  => '–ü—Ä–∏ –≤—ã—á–∏—Å–ª–µ–Ω–∏–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞'

//alculateVolumeAndArea('15')  => '–ü—Ä–∏ –≤—ã—á–∏—Å–ª–µ–Ω–∏–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞'

//calculateVolumeAndArea(-15)  => '–ü—Ä–∏ –≤—ã—á–∏—Å–ª–µ–Ω–∏–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞'


function calculateVolumeAndArea(length) {
    let volume;
    let area;
    if (typeof (length) != 'number' || length <= 0 || length % 1 != 0) {
        return console.log("–ü—Ä–∏ –≤—ã—á–∏—Å–ª–µ–Ω–∏–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞");
    } else {
        volume = length * length * length;
        area = length * length * 6;
        return console.log(`–û–±—ä–µ–º –∫—É–±–∞: ${volume}, –ø–ª–æ—â–∞–¥—å –≤—Å–µ–π –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏: ${area}`)
    }
}

// calculateVolumeAndArea(15.5);

//2) –ü–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –±–æ–ª–µ–µ —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–º –∑–∞–¥–∞—á–∞–º :) –í—ã –æ–±–Ω–∞—Ä—É–∂–∏—Ç–µ, —á—Ç–æ —Ç–∞–º –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤—Å–µ —Ç–æ–∂–µ —Å–∞–º–æ–µ.

//–ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –æ–ø—Ä–µ–¥–µ–ª—è—Ç—å –Ω–æ–º–µ—Ä –∫—É–ø–µ –ø–æ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–º—É –µ–π –Ω–æ–º–µ—Ä—É –º–µ—Å—Ç–∞. –ù–∞–≥–ª—è–¥–Ω–æ:



//–§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 36.

//–ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç –Ω–µ —á–∏—Å–ª–æ, –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ –∏–ª–∏ –¥—Ä–æ–±–Ω–æ–µ - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ:

//"–û—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –º–µ—Å—Ç–∞"

//–ï—Å–ª–∏ —á–∏—Å–ª–æ 0 –∏–ª–∏ –±–æ–ª—å—à–µ 36, —Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: "–¢–∞–∫–∏—Ö –º–µ—Å—Ç –≤ –≤–∞–≥–æ–Ω–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"

//–ü—Ä–∏–º–µ—Ä:

//getCoupeNumber(33)  => 9

//getCoupeNumber(7)  => 2

//getCoupeNumber(300)  => "–¢–∞–∫–∏—Ö –º–µ—Å—Ç –≤ –≤–∞–≥–æ–Ω–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"

//getCoupeNumber(0)  => "–¢–∞–∫–∏—Ö –º–µ—Å—Ç –≤ –≤–∞–≥–æ–Ω–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"

//getCoupeNumber(7.7)  => "–û—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –º–µ—Å—Ç–∞"

//getCoupeNumber(-10)  => "–û—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –º–µ—Å—Ç–∞"

//getCoupeNumber('Hello')  => "–û—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –º–µ—Å—Ç–∞"

//–¢–∞–∫–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤–ø–æ–ª–Ω–µ —Ä–µ–∞–ª—å–Ω–∞ –∏ –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –±–∏–ª–µ—Ç–æ–≤, 
// –≤ —Ç–æ–º —á–∏—Å–ª–µ –∏ –≤–∏–∑—É–∞–ª—å–Ω–æ –Ω–∞ —Å–∞–π—Ç–∞—Ö. –ö–æ–Ω–µ—á–Ω–æ, —Ç–∞–º –±—É–¥–µ—Ç –∫—É–¥–∞ –±–æ–ª—å—à–µ —É—Å–ª–æ–≤–∏–π, –Ω–æ —Å–º—ã—Å–ª –æ—Å—Ç–∞–µ—Ç—Å—è —Ç–∞–∫–∏–º –∂–µ.

// function getCoupeNumber(number) {
//     let compartmentNumber;
//     if (number < 0 || typeof(number) != 'number' || number%1 != 0) {
//         return console.log("–û—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –º–µ—Å—Ç–∞")
//     } else if (number < 1 || number > 36) {
//         return console.log("–¢–∞–∫–∏—Ö –º–µ—Å—Ç –≤ –≤–∞–≥–æ–Ω–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç");
//     } else {
//         compartmentNumber = parseInt((number + 3) / 4);
//                            = Math.ceil(number / 4);
//         console.log(compartmentNumber)
//     }
// }

//  getCoupeNumber(7);


//  function getCoupeNumber(number) {
//     if (typeof number !== 'number' || number < 1 || !Number.isInteger(number)) {
//         return "–û—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –º–µ—Å—Ç–∞";
//     }

//     if (number > 36) {
//         return "–¢–∞–∫–∏—Ö –º–µ—Å—Ç –≤ –≤–∞–≥–æ–Ω–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç";
//     }

//     return Math.floor((number - 1) / 4) + 1;
// }

// for (let i = 1; i <= 36; i++){
// console.log(getCoupeNumber(i));    
// }

//(**) –ó–∞–¥–∞—á–∞ —Å —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–π –Ω–∞ —á–∏—Å–ª–∞ –§–∏–±–æ–Ω–∞—á—á–∏
//–≠—Ç–æ –æ–¥–Ω–∞ –∏–∑ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞—á –≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–∏ –Ω–∞ —Å–∞–º—ã—Ö —Ä–∞–∑–Ω—ã—Ö —è–∑—ã–∫–∞—Ö. –°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –≤—ã —Å–ª—ã—à–∞–ª–∏ –ø—Ä–æ —á–∏—Å–ª–∞ –§–∏–±–æ–Ω–∞—á—á–∏, 
// –≥–¥–µ –ø–µ—Ä–≤—ã–µ –¥–≤–∞ —á–∏—Å–ª–∞ —Ä–∞–≤–Ω—ã 0 –∏ 1, –∞ –∫–∞–∂–¥–æ–µ –ø–æ—Å–ª–µ–¥—É—é—â–µ–µ —á–∏—Å–ª–æ —Ä–∞–≤–Ω–æ —Å—É–º–º–µ –¥–≤—É—Ö –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —á–∏—Å–µ–ª.
//  –ò –Ω–∞ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è—Ö —á–∞—Å—Ç–æ –¥–∞—é—Ç –∑–∞–¥–∞—á–∏, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å —ç—Ç–∏–º–∏ —á–∏—Å–ª–∞–º–∏. –ï—Å—Ç—å —Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞—Ü–∏–∏ –∏ —Ç—É—Ç –º—ã –ø–æ–ø—Ä–æ–±—É–µ–º —Ä–µ—à–∏—Ç—å –æ–¥–Ω—É –∏–∑ –Ω–∏—Ö.

//–°—Ä–∞–∑—É —Å–∫–∞–∂—É, —á—Ç–æ –µ—Å—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç—ã —Ä–µ—à–µ–Ω–∏—è —á–µ—Ä–µ–∑ –ø—Ä–∏–µ–º,
//  –Ω–∞–∑—ã–≤–∞–µ–º—ã–π —Ä–µ–∫—É—Ä—Å–∏—è. –û–Ω –¥–∞–ª—å—à–µ –ø–æ –∫—É—Ä—Å—É. –ù–æ —ç—Ç–æ—Ç –≤–∞—Ä–∏–∞–Ω—Ç –Ω—É–∂–Ω–æ —Ä–µ—à–∏—Ç—å –±–µ–∑ –µ—ë –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è. 
// –¢–∞–∫–∏–µ —É—Å–ª–æ–≤–∏—è —á–∞—Å—Ç–æ —Å—Ç–∞–≤—è—Ç –Ω–∞ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è—Ö. –ö–æ–≥–¥–∞ –≤—ã –ø—Ä–æ–π–¥–µ—Ç–µ —É—Ä–æ–∫ –ø–æ —Ä–µ–∫—É—Ä—Å–∏–∏, –≤—ã –º–æ–∂–µ—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ —ç—Ç–æ –∑–∞–¥–∞–Ω–∏–µ –∏ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Ä–µ—à–∏—Ç—å –ø–æ –¥—Ä—É–≥–æ–º—É. 
// –¢–∞–∫ –∂–µ –ø–æ–¥—Å–∫–∞–∑–∫—É (–Ω–æ –Ω–µ —Ä–µ—à–µ–Ω–∏–µ —ç—Ç–æ–π –∑–∞–¥–∞—á–∏) –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ —Ç—É—Ç. –ù–æ –ø–æ—Å—Ç–∞—Ä–∞–π—Ç–µ—Å—å –Ω–µ –æ—Ç–∫—Ä—ã–≤–∞—Ç—å üôÇ

//–ó–∞–¥–∞—á–∞:

//–°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –≤ —Å–µ–±—è –æ–¥–∏–Ω –∞—Ä–≥—É–º–µ–Ω—Ç-—Ü–µ–ª–æ–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ.
//  –û–Ω–∞ –¥–æ–ª–∂–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Å—Ç—Ä–æ–∫—É, –≤ –∫–æ—Ç–æ—Ä–æ–π –±—É–¥—É—Ç —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª –≤—ã–≤–µ–¥–µ–Ω—ã —á–∏—Å–ª–∞ –§–∏–±–æ–Ω–∞—á—á–∏. 
// –ü—Ä–∏—á–µ–º, –∏—Ö –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ä–∞–≤–Ω–æ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–º—É –∞—Ä–≥—É–º–µ–Ω—Ç—É.

//–ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç –Ω–µ —á–∏—Å–ª–æ - –≤–µ—Ä–Ω—É—Ç—å –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É. –†–µ—à–∞—Ç—å –±–µ–∑ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Ä–µ–∫—É—Ä—Å–∏–∏.

//–ü—Ä–∏–º–µ—Ä:

//fib(4) => ''0 1 1 2"

//fib(7) => ''0 1 1 2 3 5 8"

//fib('7') => ''"

//fib(1) => "0"

//fib(0) => ''"

//–ó–∞–¥–∞—á–∞ –Ω–µ–ø—Ä–æ—Å—Ç–∞—è –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤, —Ç–∞–∫ —á—Ç–æ —Å –ø–µ—Ä–≤–æ–≥–æ —Ä–∞–∑–∞ –º–æ–∂–µ—Ç –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è.



function fib(number) {
    let first = 0;                    
    let second = 1;                     
    let third = 0;
    let result = "";
  
 if(typeof(number) === 'string' || number === 0 || number%1 != 0) {
    return "";
 }else {

    for (let i = 1; i <= number +2; i++) {
        result = result + ` ${first}`;  
        first = second ;        // a = 0 + 1
         second = third;  
         third= first + second;
        }
        }
    return result.slice(4);
}

console.log(fib(9));

// function fib(num) {
//     if (typeof(num) !== 'number' || num <= 0 || !Number.isInteger(num)) {
//         return "";
//     }

//     let result = '';
//     let first = 0;
//     let second = 1;

//     for (let i = 0; i < num; i++) {
//         if (i + 1 === num) {
//             result += `${first}`;
//             // –ë–µ–∑ –ø—Ä–æ–±–µ–ª–∞ –≤ –∫–æ–Ω—Ü–µ
//         } else {
//             result += `${first} `;
//         }

//         let third = first + second;
//         first = second;
//         second = third;
//     }

//     return result;
// }

// fib(5)


// let a = 0;     
// let b = 1; 
//let c = 0;
// let str = "";
// for (let i = 1; i <= number; i++) {
//     str = str + ` ${a}`;            Ierakstam 0
//     a 1 = b 1 + c 0;  
//   c = a;                             summ = 1
//                       

                          
// }
// let a = 1;     
// let b = 1;                               nule tagad ir 1
//let c = 1;
// let str = "0";
// for (let i = 1; i <= number; i++) {
//     0 = str + ` ${a}`;              ierakstam 1 musu stringa  rez = 0 1
//    a = b1 + c1;                             partaisam 1 atkal par vieniieku 
 //   c = b 1;                             
// }

// let a = 2;     
// let b = 1; 
//let c = 1;
// let str = "0 1";
// for (let i = 1; i <= number; i++) {
//     0 1  = str + ` ${ a 2}`;               pieliekam musu stringam vel vienu vieninieku rez 0 1 1
//     c = b; 
                          
// }
// let num = 1;     
// let numOld = 0; 
// let str = "";
// for (let i = 1; i <= number; i++) {
//     str = str + ` ${numOld}`;            
//     numOld = num; 
                          
// }

function fib(number) {
    let first = 0;                    
    let second = 1;                     
    let result = "";

    if (typeof number !== 'number' || number < 1 || number % 1 !== 0) {
        return "";
    }

    for (let i = 0; i < number; i++) {
        result += (i === 0) ? `${first}` : ` ${first}`;
        let third = first + second;
        first = second;
        second = third;
    }

    return result;
}

// Testƒì≈°ana:
console.log(fib(7));  // "0 1 1 2"
// console.log(fib(7));  // "0 1 1 2 3 5 8"
// console.log(fib("7"));  // ""
// console.log(fib(1));  // "0"
// console.log(fib(0));  // ""

function fib(n) {
    if (typeof n !== "number" || n < 1 || !Number.isInteger(n)) {
        return "";
    }

    let fibArray = [];
    
    for (let i = 0; i < n; i++) {
        if (i === 0) {
            fibArray.push(0);
        } else if (i === 1) {
            fibArray.push(1);
        } else {
            fibArray.push(fibArray[i - 1] + fibArray[i - 2]);
        }
    }

    return fibArray.join(" ");
}

// // Testƒì≈°ana:
// console.log(fib(4));  // "0 1 1 2"
// console.log(fib(7));  // "0 1 1 2 3 5 8"
// console.log(fib("7"));  // ""
// console.log(fib(1));  // "0"
// console.log(fib(0));  // ""
