"use strict";


//1) Создайте функцию, которая будет вычислять объем и площадь полной поверхности куба (тоже базовая математика, иногда используется в создании анимаций).
//  Эта функция принимает в себя целое число со значением длины ребра куба. Ответ выведите в формате строки, который изображен в примерах.

//Если в функцию попал неправильный аргумент или вычислить значения невозможно - вернуть строку "При вычислении произошла ошибка"

//НЕ ИСПОЛЬЗУЙТЕ ОПЕРАТОР СТЕПЕНИ ** - в онлайн среде браузера он не работает и тесты будут ломаться. Это из-за того, что этот оператор из более нового стандарта, чем тут доступен.

//римеры:

//calculateVolumeAndArea(5)  => 'Объем куба: 125, площадь всей поверхности: 150'

//calculateVolumeAndArea(15)  => 'Объем куба: 3375, площадь всей поверхности: 1350'

//alculateVolumeAndArea(15.5)  => 'При вычислении произошла ошибка'

//alculateVolumeAndArea('15')  => 'При вычислении произошла ошибка'

//calculateVolumeAndArea(-15)  => 'При вычислении произошла ошибка'


function calculateVolumeAndArea(length) {
    let volume;
    let area;
    if (typeof (length) != 'number' || length <= 0 || length % 1 != 0) {
        return console.log("При вычислении произошла ошибка");
    } else {
        volume = length * length * length;
        area = length * length * 6;
        return console.log(`Объем куба: ${volume}, площадь всей поверхности: ${area}`)
    }
}

// calculateVolumeAndArea(15.5);

//2) Постепенно переходим к более реалистичным задачам :) Вы обнаружите, что там используется все тоже самое.

//Напишите функцию, которая будет определять номер купе по переданному ей номеру места. Наглядно:



//Функция принимает только целое число от 1 до 36.

//Если переданный аргумент не число, отрицательное или дробное - возвращается сообщение:

//"Ошибка. Проверьте правильность введенного номера места"

//Если число 0 или больше 36, то сообщение: "Таких мест в вагоне не существует"

//Пример:

//getCoupeNumber(33)  => 9

//getCoupeNumber(7)  => 2

//getCoupeNumber(300)  => "Таких мест в вагоне не существует"

//getCoupeNumber(0)  => "Таких мест в вагоне не существует"

//getCoupeNumber(7.7)  => "Ошибка. Проверьте правильность введенного номера места"

//getCoupeNumber(-10)  => "Ошибка. Проверьте правильность введенного номера места"

//getCoupeNumber('Hello')  => "Ошибка. Проверьте правильность введенного номера места"

//Такая функция вполне реальна и может использоваться для формирования билетов, 
// в том числе и визуально на сайтах. Конечно, там будет куда больше условий, но смысл остается таким же.

// function getCoupeNumber(number) {
//     let compartmentNumber;
//     if (number < 0 || typeof(number) != 'number' || number%1 != 0) {
//         return console.log("Ошибка. Проверьте правильность введенного номера места")
//     } else if (number < 1 || number > 36) {
//         return console.log("Таких мест в вагоне не существует");
//     } else {
//         compartmentNumber = parseInt((number + 3) / 4);
 //                            = Math.ceil(number / 4);
//         console.log(compartmentNumber)
//     }
// }

//  getCoupeNumber(7);


 function getCoupeNumber(number) {
    if (typeof number !== 'number' || number < 1 || !Number.isInteger(number)) {
        return "Ошибка. Проверьте правильность введенного номера места";
    }
    
    if (number > 36) {
        return "Таких мест в вагоне не существует";
    }
    
    return Math.floor((number - 1) / 4) + 1;
}

for (let i = 1; i <= 36; i++){
console.log(getCoupeNumber(i));    
}